FROM python:3.10-slim

WORKDIR /app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    default-mysql-client \
    && rm -rf /var/lib/apt/lists/*

# Copy the whole project
COPY . .

# Install the package and PyInstaller
RUN pip install --no-cache-dir -e . && \
    pip install --no-cache-dir pyinstaller

# Create a launcher script
RUN echo '#!/usr/bin/env python3' > launcher.py && \
    echo 'from mysql_sync_manager.main import main' >> launcher.py && \
    echo 'if __name__ == "__main__":' >> launcher.py && \
    echo '    main()' >> launcher.py

# Create the executable
RUN pyinstaller \
    --name mysql-sync-manager \
    --onefile \
    --hidden-import mysql_sync_manager \
    --hidden-import mysql_sync_manager.config \
    --hidden-import mysql_sync_manager.backup_operations \
    --hidden-import mysql_sync_manager.db \
    --hidden-import mysql_sync_manager.exceptions \
    --hidden-import mysql_sync_manager.menu \
    --hidden-import mysql_sync_manager.retry_utils \
    --hidden-import mysql_sync_manager.ssh \
    --hidden-import mysql_sync_manager.utils \
    --hidden-import cryptography \
    --hidden-import paramiko \
    --hidden-import yaml \
    --hidden-import scp \
    --paths /app \
    launcher.py

# Prepare distribution files
RUN mkdir -p /app/dist && \
    # List contents of the dist directory created by PyInstaller
    echo "PyInstaller dist contents:" && \
    ls -la dist && \
    # Create a precise copy of the executable to /app/dist
    cp dist/mysql-sync-manager /app/dist/mysql-sync-manager && \
    # Copy the template config
    cp mysql_sync_manager/db_configs.template.yml /app/dist/db_configs.yml && \
    # Verify the files
    echo "Final /app/dist contents:" && \
    ls -la /app/dist

# Optional: set the default command to just list the dist contents
CMD ["bash", "-c", "ls -la /app/dist"]